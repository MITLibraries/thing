<%= content_for(:title, "Thesis Processing | MIT Libraries") %>

<% content_for :additional_js do %>
  <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<% end %>

<link href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" rel="stylesheet">

<h3 class="title title-page">Thesis Processing Queue</h3>

<%= render 'shared/you_are' %>

<%= render 'shared/defined_terms_filter' %>

<div id="status-list" class="filter-row">
  <button class="btn button-primary" data-filter="*">Show all</button>
</div>

<table class="table" id="thesisQueue" title="Thesis processing queue">
  <thead>
    <tr>
      <th scope="col">File transfer date</th>
      <th scope="col">Degree date</th>
      <th scope="col">Department(s)</th>
      <th scope="col">Author(s)</th>
      <th scope="col">Issues found</th>
      <th scope="col">Status</th>
      <th scope="col">Processor note</th>
    </tr>
  </thead>
  <tbody>
    <%= render(partial: 'thesis/select_thesis', collection: @thesis) || render('select_empty') %>
  </tbody>
</table>

<div id="publish-to-dspace" class="gridband" style="display: none;" aria-live="polite" role="region">
  <div class="inline-action well">
    <% if params[:graduation] == 'all' || params[:graduation].nil? %>
      <div class="message">
        <h4 class="title">Select a term to publish to DSpace@MIT</h4>
        <p>Batches of theses can be sent to DSpace@MIT only when a term is specified.</p>
      </div>
    <% else %>
      <div class="message">
        <h4 class="title">Ready to publish to DSpace@MIT?</h4>
        <p>Click the button at right to review the official set of theses which will be published.</p>
      </div>
      <div class="actions">
        <%= link_to "Final preview of theses", thesis_publish_preview_path(:graduation => params[:graduation]), class: 'button button-primary' %>
      </div>
    <% end %>
  </div>
</div>

<div id="reset-publication-errors"class="gridband" style="display: none;" aria-live="polite" role="region">
  <div class="inline-action well">
    <div class="message">
      <h4 class="title">Ready to republish everything on this list?</h4>
      <p>Once you have resolved any errors, you can reset this entire list.</p>
    </div>
    <div class="actions">
        <%= link_to "Reset all errors to Publication Review", reset_all_publication_errors_path(:graduation => params[:graduation]), class: 'button button-primary' %>
      </div>
  </div>
</div> 

<script type="text/javascript">
function applyFilter(table, _status) {
  // Update UI
  $("#status-list").find(".button-primary").removeClass("button-primary").addClass("button-secondary");
  $('#status-list button[data-filter="' + _status + '"]').removeClass("button-secondary").addClass("button-primary");

  // Filter the data table
  table.draw();

  // Reveal the "Publish to DSpace@MIT panel if warranted"
  if( 'Publication review' === _status ) {
    $("#publish-to-dspace").attr('style', '');
  } else {
    $("#publish-to-dspace").attr('style', 'display: none;');
  }

  // Reveal the "Reset errors panel if warranted"
  if( 'Publication error' === _status ) {
    $("#reset-publication-errors").attr('style', '');
  } else {
    $("#reset-publication-errors").attr('style', 'display: none;');
  }
}

$(document).ready( function () {
  if( document.getElementById('thesisQueue').getElementsByClassName('empty').length === 0 ) {
    // _status is the variable which the custom filter behavior looks for.
    var _status = "*";

    // Initialize DataTable, sorting by default on degree column (columns are zero-based)
    var table = $('#thesisQueue').DataTable({
      stateSave: true,
      stateSaveParams: function( settings, data ) {
        data.filter = _status;
      },
      stateLoadParams: function( settings, data ) {
        if ( data.filter ) {
          _status = data.filter;
        }
      }
    });

    // Add filter for "Status" column to standard table behavior
    // From: https://datatables.net/blog/2014-08-26#Complete-code
    // Note that this new behavior is invoked on calling table.draw()
    $.fn.dataTable.ext.search.push(
      function( settings, data, dataIndex ) {
        return ( data[5] === _status || _status === "*" )
          ? true
          : false
      }
    );

    // Populate filter buttons with found values for publication status
    var terms = [...new Set( table.columns(5).data()[0] )];
    terms.forEach(element => {
      document
        .getElementById("status-list")
        .insertAdjacentHTML("beforeend", `
        <button class="btn button-secondary" data-filter="${element}">${element}</button>
      `);
    });

    // Apply initial filter
    applyFilter(table, _status);

    // Change highlighting and perform filtering when buttons are clicked
    $("#status-list button").click(function() {
      _status = $(this).data("filter");
      applyFilter(table, _status);
    });
  };
});
</script>
