<%= content_for(:title, "Thesis Transfer Submission | MIT Libraries") %>

<% content_for :additional_js do %>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>
<% end %>

<h3 class="title title-page">Transfer theses</h3>

<%= render 'shared/you_are' %>

<%= render 'welcome' %>

<%= simple_form_for(@transfer, url: '/transfer', html: { class: 'transferSubmission' }, validate: true ) do |f| %>

  <%= f.error_notification %>
  <div class="alert alert-banner error" style="display: none;" role="alert" aria-invalid="true"></div>

  <%= f.association :department, label_method: :name_dw, as: :select,
        collection: current_user.submittable_departments,
        validate: { presence: true },
        include_hidden: false,
        wrapper_html: { class: 'field-row select layout-1q3q layout-band' },
        input_html: { class: 'field field-select col3q', multiple: false,
          data: { msg: Transfer::VALIDATION_MSGS[:department] },
          'aria-describedby': 'transfer_department-hint'
        },
        label_html: { class: 'col1q' },
        label: 'Your department',
        hint: 'Select the department or program for which you are
               submitting theses.',
        hint_html: { id: 'transfer_department-hint', class: 'col3q' } %>

  <div class="field-row layout-1q3q layout-band">
    <label class="col1q required field-label" for="thesis_date_ids">Degree date</label>
    <div class="col3q group-inline" id="thesis_date_ids">
      <%= f.input :graduation_month, label: 'Month', as: :select,
            collection: Transfer::VALID_MONTHS,
            wrapper_html: { class: 'field-wrap' },
            input_html: { class: 'field field-select', data: { msg: Transfer::VALIDATION_MSGS[:graduation_month] },
            'aria-describedby': 'thesis_date_ids-hint' } %>
      <%= f.input :graduation_year, label: 'Year',
            collection: [Date.today.last_year.strftime('%Y'),
                         Date.today.strftime('%Y'),
                         Date.today.next_year.strftime('%Y')],
            wrapper_html: { class: 'field-wrap' },
            input_html: { class: 'field field-select',
              data: { msg: Transfer::VALIDATION_MSGS[:graduation_year] } } %>
      <div id="thesis_date_ids-hint" class="hint">Enter the month and year
      in which these degrees will be conferred.</div>
    </div>
  </div>

  <%= f.input :files, as: :file,
        wrapper_html: { class: 'field-row layout-1q3q layout-band' },
        input_html: { class: 'field field-upload col3q',
                      multiple: true,
                      direct_upload: true,
                      data: { msg: Transfer::VALIDATION_MSGS[:files] },
                      'aria-describedby': 'transfer_files_ids-hint' },
        label_html: { class: 'col1q' },
        label: 'Files to upload',
        required: true,
        hint: 'Do not upload a zip file.',
        hint_html: { id: 'transfer_files_ids-hint', class: 'col3q' }  %>

  <div class='field-wrap layout-1q3q layout-band'>
    <div id="files_to_upload" class="col3q"></div>
  </div>

  <%= f.input :note, as: :text,
        wrapper_html: { class: 'field-row layout-1q3q layout-band' },
        input_html: { class: 'field field-note col3q', :rows => 10,
          'aria-describedby': 'transfer_note-hint' },
        label_html: { class: 'col1q' },
        label: 'Notes (optional)',
        required: false,
        hint: 'Anything else we should know? If you have questions, email
               <a href="mailto:mit-theses@mit.edu?Subject=Transfer%20submission%20help" target="_blank">mit-theses@mit.edu</a> for the fastest response.'.html_safe,
        hint_html: { id: 'transfer_note-hint', class: 'col3q' } %>

  <%= f.input :transfer_certified, as: :boolean,
              required: true,
              wrapper_html: { class: 'field-row layout-band layout-1q3q' },
              input_html: { class: 'checkbox-input' },
              label_html: { class: 'col3q', style: 'font-weight: normal;' },
              label: "â€ƒI confirm the theses in this transfer have been approved and certified by my department or program." %>

  <div id="direct-upload-panel">
  </div>

  <div class='field-row layout-3q1q'>
    <div class="col1q-r">
      <%= submit_tag 'Complete transfer', class: 'btn button-primary' %>
    </div>
  </div>

<% end # Ends simple_form_for %>

  <script>
    // Load file uploader based on querystring
    var queryParams = new URLSearchParams(window.location.search);
    if ( queryParams.has('upload') ) { // Any value for "upload" in querystring triggers the new uploader
      $("input:file").change(listPendingFiles);
    } else {
      $("input:file").change(function () {
          var filenames = '';
          var fileblurb = '<p>The following files will be uploaded when this form is submitted:</p>';
          for (var i = 0; i < this.files.length; i++) {
              filenames += '<li>' + this.files[i].name + '</li>';
          }
          $("#files_to_upload").html(fileblurb + '<ul>' + filenames + '</ul>');
      });
    }

    $("#new_transfer").validate({
      invalidHandler: function(event, validator) {
        var errors = validator.numberOfInvalids();
        if (errors) {
          var message = errors == 1
            ? 'The form was not submitted successfully - one required field needs to be fixed.'
            : 'The form was not submitted successfully - ' + errors + ' required fields need to be fixed.';
          $("div.error").html(message);
          $("div.error").show();
        } else {
          $("div.error").hide();
        }
      }
    });

    function listPendingFiles() {
      let field = document.getElementById('transfer_files');
      let filenames = '';
      let fileblurb = '<p>The following files will be uploaded when this form is submitted:</p>';
      let fileadd = '<p><input type="file" id="add_files" onChange="mergeFiles(event)" multiple style="display: none;"><button onClick="addFiles(event)">Add more files to this transfer</button></p>';
      for (var i = 0; i < field.files.length; i++) {
          filenames += '<li>' + field.files[i].name + ' <a href="#" data-file="' + i + '" class="remove-file" onClick="removeFile(event)">(remove<span class="sr"> ' + field.files[i].name + '</span>)</a></li>';
      }
      $("#files_to_upload").html(fileblurb + '<ul>' + filenames + '</ul>' + fileadd);
    };

    function removeFile(event) {
      event.preventDefault();
      let pendingFileArray = Array.from(document.getElementById('transfer_files').files);

      pendingFileArray.splice(event.target.dataset['file'], 1);

      rebuildFiles(pendingFileArray);
    }

    function addFiles(event) {
      event.preventDefault();
      document.getElementById("add_files").click();
    }

    function mergeFiles(event) {
      let pendingFileArray = Array.from(document.getElementById('transfer_files').files);
      let moreFilesArray = Array.from(document.getElementById('add_files').files);

      newFilesArray = pendingFileArray.concat(moreFilesArray);

      rebuildFiles(newFilesArray);
    }

    function rebuildFiles(newArray) {
      let newTransfer = new DataTransfer();
      newArray.forEach(function(item) {
        let file = new File([item], item.name);
        newTransfer.items.add(file);
      });
      document.getElementById('transfer_files').files = newTransfer.files;
      listPendingFiles();
    }
  </script>
